# => Cohesity Protection Jobs for Physical, VMware, and GenericNAS environments
# =>
# => Role: cohesity.ansible
# => Version: 0.5.0
# => Date: 2018-11-05
# =>

# => Create a new Protection Job by Endpoint based on Ansible Inventory
# =>
---
  - hosts: workstation
    gather_facts: no
    roles:
      - cohesity.ansible
    tasks:
        # => Manage Physical
      - name: Stop existing Protection Job Execution for each Physical Server
        include_role:
          name: cohesity.ansible
          tasks_from: job
        vars:
          cohesity_server: "{{ var_cohesity_server }}"
          cohesity_admin: "{{ var_cohesity_admin }}"
          cohesity_password: "{{ var_cohesity_password }}"
          cohesity_validate_certs: "{{ var_validate_certs }}"
          cohesity_protection:
              state: stopped
              job_name: "{{ hostvars[item]['ansible_host'] }}"
              cancel_active: True
        with_items: "{{ groups.physical }}"
        tags: [ 'cohesity', 'sources', 'stopped', 'remove', 'physical' ]

      - name: Remove Protection Jobs for each Physical Server
        include_role:
          name: cohesity.ansible
          tasks_from: job
        vars:
          cohesity_server: "{{ var_cohesity_server }}"
          cohesity_admin: "{{ var_cohesity_admin }}"
          cohesity_password: "{{ var_cohesity_password }}"
          cohesity_validate_certs: "{{ var_validate_certs }}"
          cohesity_protection:
              state: absent
              job_name: "{{ hostvars[item]['ansible_host'] }}"
              endpoint: "{{ hostvars[item]['ansible_host'] }}"
              delete_backups: True
        with_items: "{{ groups.physical }}"
        tags: [ 'cohesity', 'sources', 'remove', 'physical' ]

      - name: Create new Protection Jobs for each Physical Server
        include_role:
          name: cohesity.ansible
          tasks_from: job
        vars:
          cohesity_server: "{{ var_cohesity_server }}"
          cohesity_admin: "{{ var_cohesity_admin }}"
          cohesity_password: "{{ var_cohesity_password }}"
          cohesity_validate_certs: "{{ var_validate_certs }}"
          cohesity_protection:
              state: present
              job_name: "{{ hostvars[item]['ansible_host'] }}"
              endpoint: "{{ hostvars[item]['ansible_host'] }}"
        with_items: "{{ groups.physical }}"
        tags: [ 'cohesity', 'sources', 'register', 'physical' ]

      - name: Start On-Demand Protection Job Execution for each Physical Server
        include_role:
          name: cohesity.ansible
          tasks_from: job
        vars:
          cohesity_server: "{{ var_cohesity_server }}"
          cohesity_admin: "{{ var_cohesity_admin }}"
          cohesity_password: "{{ var_cohesity_password }}"
          cohesity_validate_certs: "{{ var_validate_certs }}"
          cohesity_protection:
              state: started
              job_name: "{{ hostvars[item]['ansible_host'] }}"
        with_items: "{{ groups.physical }}"
        tags: [ 'cohesity', 'sources', 'started', 'physical' ]

        # => Manage VMware
      - name: Stop existing Protection Job Execution for each VMware Server
        include_role:
          name: cohesity.ansible
          tasks_from: job
        vars:
          cohesity_server: "{{ var_cohesity_server }}"
          cohesity_admin: "{{ var_cohesity_admin }}"
          cohesity_password: "{{ var_cohesity_password }}"
          cohesity_validate_certs: "{{ var_validate_certs }}"
          cohesity_protection:
              state: stopped
              job_name: "{{ hostvars[item]['ansible_host'] }}"
              environment: "{{ hostvars[item]['type'] }}"
              cancel_active: True
        with_items: "{{ groups.vmware }}"
        tags: [ 'cohesity', 'sources', 'stopped', 'remove', 'vmware' ]

      - name: Remove Protection Jobs for each VMware Server
        include_role:
          name: cohesity.ansible
          tasks_from: job
        vars:
          cohesity_server: "{{ var_cohesity_server }}"
          cohesity_admin: "{{ var_cohesity_admin }}"
          cohesity_password: "{{ var_cohesity_password }}"
          cohesity_validate_certs: "{{ var_validate_certs }}"
          cohesity_protection:
              state: absent
              job_name: "{{ hostvars[item]['ansible_host'] }}"
              endpoint: "{{ hostvars[item]['ansible_host'] }}"
              environment: "{{ hostvars[item]['type'] }}"
              delete_backups: True
        with_items: "{{ groups.vmware }}"
        tags: [ 'cohesity', 'sources', 'remove', 'vmware' ]

      - name: Create new Protection Jobs for each VMware Server
        include_role:
          name: cohesity.ansible
          tasks_from: job
        vars:
          cohesity_server: "{{ var_cohesity_server }}"
          cohesity_admin: "{{ var_cohesity_admin }}"
          cohesity_password: "{{ var_cohesity_password }}"
          cohesity_validate_certs: "{{ var_validate_certs }}"
          cohesity_protection:
              state: present
              job_name: "{{ hostvars[item]['ansible_host'] }}"
              endpoint: "{{ hostvars[item]['ansible_host'] }}"
              environment: "{{ hostvars[item]['type'] }}"
        with_items: "{{ groups.vmware }}"
        tags: [ 'cohesity', 'sources', 'register', 'vmware' ]

      - name: Start On-Demand Protection Job Execution for each VMware Server
        include_role:
          name: cohesity.ansible
          tasks_from: job
        vars:
          cohesity_server: "{{ var_cohesity_server }}"
          cohesity_admin: "{{ var_cohesity_admin }}"
          cohesity_password: "{{ var_cohesity_password }}"
          cohesity_validate_certs: "{{ var_validate_certs }}"
          cohesity_protection:
              state: started
              job_name: "{{ hostvars[item]['ansible_host'] }}"
              environment: "{{ hostvars[item]['type'] }}"
        with_items: "{{ groups.vmware }}"
        tags: [ 'cohesity', 'sources', 'started', 'vmware' ]

        # => Manage Generic NAS Endpoints
      - name: Stop existing Protection Job Execution for each NAS Endpoint
        include_role:
          name: cohesity.ansible
          tasks_from: job
        vars:
          cohesity_server: "{{ var_cohesity_server }}"
          cohesity_admin: "{{ var_cohesity_admin }}"
          cohesity_password: "{{ var_cohesity_password }}"
          cohesity_validate_certs: "{{ var_validate_certs }}"
          cohesity_protection:
              state: stopped
              job_name: "{{ hostvars[item]['endpoint'] }}"
              environment: "{{ hostvars[item]['type'] }}"
              cancel_active: True
        with_items: "{{ groups.generic_nas }}"
        tags: [ 'cohesity', 'sources', 'stopped', 'remove', 'generic_nas' ]

      - name: Remove Protection Jobs for each NAS Endpoint
        include_role:
          name: cohesity.ansible
          tasks_from: job
        vars:
          cohesity_server: "{{ var_cohesity_server }}"
          cohesity_admin: "{{ var_cohesity_admin }}"
          cohesity_password: "{{ var_cohesity_password }}"
          cohesity_validate_certs: "{{ var_validate_certs }}"
          cohesity_protection:
              state: absent
              job_name: "{{ hostvars[item]['endpoint'] }}"
              endpoint: "{{ hostvars[item]['endpoint'] }}"
              environment: "{{ hostvars[item]['type'] }}"
              delete_backups: True
        with_items: "{{ groups.generic_nas }}"
        tags: [ 'cohesity', 'sources', 'remove', 'generic_nas' ]

      - name: Create new Protection Jobs for each NAS Endpoint
        include_role:
          name: cohesity.ansible
          tasks_from: job
        vars:
          cohesity_server: "{{ var_cohesity_server }}"
          cohesity_admin: "{{ var_cohesity_admin }}"
          cohesity_password: "{{ var_cohesity_password }}"
          cohesity_validate_certs: "{{ var_validate_certs }}"
          cohesity_protection:
              state: present
              job_name: "{{ hostvars[item]['endpoint'] }}"
              endpoint: "{{ hostvars[item]['endpoint'] }}"
              environment: "{{ hostvars[item]['type'] }}"
        with_items: "{{ groups.generic_nas }}"
        tags: [ 'cohesity', 'sources', 'register', 'generic_nas' ]

      - name: Start On-Demand Protection Job Execution for each NAS Endpoint
        include_role:
          name: cohesity.ansible
          tasks_from: job
        vars:
          cohesity_server: "{{ var_cohesity_server }}"
          cohesity_admin: "{{ var_cohesity_admin }}"
          cohesity_password: "{{ var_cohesity_password }}"
          cohesity_validate_certs: "{{ var_validate_certs }}"
          cohesity_protection:
              state: started
              job_name: "{{ hostvars[item]['endpoint'] }}"
              environment: "{{ hostvars[item]['type'] }}"
        with_items: "{{ groups.generic_nas }}"
        tags: [ 'cohesity', 'sources', 'started', 'generic_nas' ]


